V. Сгенерируйте три отчёта:

1. Определите все твиты, содержащие заданный хэштег.
2. Определите суммарный эмоциональный вес твитов в заданный промежуток времени. (если эмоциональный вес слова неизвестен, считать его равным 0)
3. Определите штат, из которого было опубликовано наибольшее количество твитов в заданный промежуток времени.

Передавать в программу как параметр командной строки номер того отчёта, какой именно необходимо сформировать.

VI. Для создания отчётов используйте параметризованный (generic) интерфейс.

VII. Нарисовать карту штатов. (см. пример https://drive.google.com/file/d/0B1a9HSJbCVARWlVWb1FvZ2RHQkE/view?usp=sharing )
Примечание: координаты штатов можно домножить на 10 в соответствующей степени, сделав их целыми, тогда можно рисовать штаты как объекты типа Polygon. А так же можно использовать методы contains()  и другие класса Polygon(), необходимые для формирования отчётов в задании V.

VIII. Написать для полученного кода javadoc-документацию.
(для классов и интерфейсов из задания V и классов-сущностей из задания II, на английском)

IX. Разработать многопоточное приложение.
Использовать возможности, предоставляемые пакетом java.util.concurent.
Не использовать слово synchronized.
Все сущности, желающие получить доступ к ресурсу, должны быть потоками.
Использовать возможности ООП.

X. JDBC
Организацию соединения с базой данных вынести в отдельный класс, метод которого возвращает соединение.
Создать БД.
Создать класс для выполнения запросов на извлечение информации из БД с использованием компилированных запросов.
Создать класс на модификацию информации.

Записать в БД all_tweets, sentiments, states.

Создать запросы для выполнения отчётов из задания V.

XI. Создать сервлет и взаимодействующие с ним классы и JSP-страницы, выполняющие заданные действия.

